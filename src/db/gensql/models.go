// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package gensql

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgtype"
)

type Author struct {
	Id        uuid.UUID    `json:"id"`
	Email     string       `json:"email"`
	Password  string       `json:"password"`
	Created   time.Time    `json:"created"`
	Updated   time.Time    `json:"updated"`
	LastLogin sql.NullTime `json:"lastLogin"`
	FirstName string       `json:"firstName"`
	LastName  string       `json:"lastName"`
	IsDeleted sql.NullBool `json:"isDeleted"`
}

type AuthorSession struct {
	Id       string       `json:"id"`
	AuthorID uuid.UUID    `json:"authorID"`
	Created  sql.NullTime `json:"created"`
}

type Post struct {
	Id        uuid.UUID    `json:"id"`
	AuthorID  uuid.UUID    `json:"authorID"`
	Content   pgtype.JSONB `json:"content"`
	Created   time.Time    `json:"created"`
	Updated   time.Time    `json:"updated"`
	IsDeleted sql.NullBool `json:"isDeleted"`
}

type PostTag struct {
	PostID uuid.UUID `json:"postID"`
	TagID  uuid.UUID `json:"tagID"`
}

type Profile struct {
	Id        uuid.UUID      `json:"id"`
	AuthorID  uuid.UUID      `json:"authorID"`
	Image     sql.NullString `json:"image"`
	About     pgtype.JSONB   `json:"about"`
	Created   time.Time      `json:"created"`
	Updated   time.Time      `json:"updated"`
	IsDeleted sql.NullBool   `json:"isDeleted"`
}

type Tag struct {
	Id      uuid.UUID    `json:"id"`
	Name    string       `json:"name"`
	Created sql.NullTime `json:"created"`
	Updated time.Time    `json:"updated"`
}
