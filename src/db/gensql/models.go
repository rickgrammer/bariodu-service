// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package gensql

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgtype"
)

type Author struct {
	Id        uuid.UUID    `db:"id" json:"id"`
	Email     string       `db:"email" json:"email"`
	Password  string       `db:"password" json:"password"`
	Created   time.Time    `db:"created" json:"created"`
	Updated   time.Time    `db:"updated" json:"updated"`
	LastLogin sql.NullTime `db:"last_login" json:"last_login"`
	FirstName string       `db:"first_name" json:"first_name"`
	LastName  string       `db:"last_name" json:"last_name"`
	IsDeleted sql.NullBool `db:"is_deleted" json:"is_deleted"`
}

type AuthorSession struct {
	Id       string       `db:"id" json:"id"`
	AuthorID uuid.UUID    `db:"author_id" json:"author_id"`
	Created  sql.NullTime `db:"created" json:"created"`
}

type Post struct {
	Id        uuid.UUID    `db:"id" json:"id"`
	AuthorID  uuid.UUID    `db:"author_id" json:"author_id"`
	Content   pgtype.JSONB `db:"content" json:"content"`
	Created   time.Time    `db:"created" json:"created"`
	Updated   time.Time    `db:"updated" json:"updated"`
	IsDeleted sql.NullBool `db:"is_deleted" json:"is_deleted"`
}

type PostTag struct {
	PostID uuid.UUID `db:"post_id" json:"post_id"`
	TagID  uuid.UUID `db:"tag_id" json:"tag_id"`
}

type Profile struct {
	Id        uuid.UUID      `db:"id" json:"id"`
	AuthorID  uuid.UUID      `db:"author_id" json:"author_id"`
	Image     sql.NullString `db:"image" json:"image"`
	About     pgtype.JSONB   `db:"about" json:"about"`
	Created   time.Time      `db:"created" json:"created"`
	Updated   time.Time      `db:"updated" json:"updated"`
	IsDeleted sql.NullBool   `db:"is_deleted" json:"is_deleted"`
}

type Tag struct {
	Id      uuid.UUID    `db:"id" json:"id"`
	Name    string       `db:"name" json:"name"`
	Created sql.NullTime `db:"created" json:"created"`
	Updated time.Time    `db:"updated" json:"updated"`
}
